---
- name: Check OSSec api are accessible from current host.
  uri:
    url: 'https://{{ os_ossec_agent_authd.address }}:{{ os_ossec_managers.api_port }}'
    method: 'GET'
    status_code: '-1,401'
    timeout: '10'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ os_ossec_agent_authd.address }}'
  changed_when: false
  failed_when: false
  register: check_wazuh_api

- name: Create OSSec agent group.
  uri:
    url: 'https://{{ os_ossec_agent_authd.address }}:{{ os_ossec_managers.api_port }}/agents/groups/{{ customer | lower | regex_replace("_", "-") }}-{{ environments | lower | regex_replace("_", "-") }}-{{ group_names[-1] | lower | regex_replace("_", "-") }}-{{ group_names[0] | lower | regex_replace("_", "-") }}?pretty'
    user: 'wazuh'
    password: '{{ os_ossec_managers.api_pass }}'
    method: 'PUT'
    status_code: '200'
    headers:
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ os_ossec_agent_authd.address }}'
  when:
    - check_wazuh_api.status == 401
    - os_ossec_version.split(".")[0] == "3"
  register: register_status
  until: register_status.status == 200
  retries: 3
  delay: 2
  no_log: true
  changed_when: false
  failed_when: false

- name: Get a JWT token from Wazuh API.
  uri:
    url: 'https://{{ os_ossec_agent_authd.address }}:{{ os_ossec_managers.api_port }}/security/user/authenticate'
    method: 'GET'
    timeout: '10'
    user: 'wazuh'
    password: '{{ os_ossec_managers.api_pass }}'
    force_basic_auth: 'yes'
    status_code: '-1,200,401'
    validate_certs: 'no'
    headers:
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
  environment:
    no_proxy: '{{ os_ossec_agent_authd.address }}'
  when:
    - check_wazuh_api.status == 401
    - os_ossec_version.split(".")[0] != "3"
  register: ossec_api_token
  no_log: true
  changed_when: false
  failed_when: false

- name: Create OSSec agent group.
  uri:
    url: 'https://{{ os_ossec_agent_authd.address }}:{{ os_ossec_managers.api_port }}/groups?pretty=true&group_id={{ customer | lower | regex_replace("_", "-") }}-{{ environments | lower | regex_replace("_", "-") }}-{{ group_names[-1] | lower | regex_replace("_", "-") }}-{{ group_names[0] | lower | regex_replace("_", "-") }}'
    method: 'POST'
    timeout: '10'
    status_code: '-1,200,400'
    validate_certs: 'no'
    headers:
      Authorization: 'Bearer {{ ossec_api_token.json.data.token }}'
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
  environment:
    no_proxy: '{{ os_ossec_agent_authd.address }}'
  when:
    - check_wazuh_api.status == 401
    - os_ossec_version.split(".")[0] != "3"
    - ossec_api_token.status == 200
  no_log: true
  changed_when: false
  failed_when: false

- name: Register OSSEC agent
  shell: >
    /var/ossec/bin/agent-auth
    -A {{ ansible_hostname | lower }}
    -m {{ os_ossec_agent_authd.address }}
    -p {{ os_ossec_agent_authd.port }}
    -P {{ os_ossec_agent_authd.authd_pass }}
    -G default,{{ customer | lower | regex_replace("_", "-") }}
    {% if os_ossec_agent_authd.ssl_auto_negotiate == 'yes' %}-a{% endif %}
  register: ossec_agent_auth_output
  changed_when: false
  failed_when: false
  no_log: true

- name: OSSEC agent configuration file transfer
  template:
    src: 'ossec.conf.j2'
    dest: '/var/ossec/etc/ossec.conf'
    owner: 'root'
    group: 'ossec'
    mode: '0640'
  when: ossec_agent_auth_output.rc == 0

- name: OSSEC agent internal options configuration file transfer
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: 'root'
    group: 'ossec'
    mode: '0640'
  loop: '{{ os_ossec_internal_options }}'
  when: ossec_agent_auth_output.rc == 0

- name: Ensure Wazuh agent client key permission.
  file:
    path: '/var/ossec/etc/client.keys'
    owner: 'root'
    group: 'ossec'
    mode: '640'
  when: ossec_agent_auth_output.rc == 0
