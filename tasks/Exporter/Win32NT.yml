---
- name: Install chocolatey
  win_chocolatey:
    name: 'chocolatey'
    source: '{{ os_win_chocolatey_source }}'
    state: 'downgrade'
    version: '{{ os_win_chocolatey_version }}'
    timeout: '120'
  environment:
    no_proxy: '*'
  register: chocolatey_status
  until: chocolatey_status is succeeded
  retries: 10
  delay: 6
  changed_when: false
  failed_when: false

- name: WMI exporter installation
  win_chocolatey:
    name: '{{ os_wmi_exporter_software }}'
    source: '{{ os_win_chocolatey_source }}'
    state: 'latest'
    params: '/TextFileDir:C:\ProgramData\wmi_textfile_inputs /EnabledCollectors:{{ ",".join(vars["os_wmi_exporter_collector"]) }} /ExtraFlags:"{{ os_wmi_exporter_extra_collector }}"'
    timeout: '120'
  environment:
    no_proxy: '*'
  register: soft_updated
  until: soft_updated is succeeded
  retries: 10
  delay: 6
  ignore_errors: yes
  changed_when: false
  failed_when: false

- name: Reloading the WMI exporter service
  win_service:
    name: 'windows_exporter'
    state: 'restarted'
    start_mode: 'delayed'
  when: soft_updated is changed
  ignore_errors: yes

- name: Create WMI exporter collector directory structure
  win_file:
    path: 'C:\ProgramData\wmi_textfile_inputs'
    state: 'directory'

- name: WMI exporter collector scripts transfer
  win_template:
    src: 'scripts/{{ ansible_system }}/{{ item }}.j2'
    dest: 'C:\Program Files\windows_exporter\{{ item }}.ps1'
  loop: '{{ os_wmi_exporter_collector_scripts }}'

- name: Node information collection at first time
  win_shell: 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -ExecutionPolicy ByPass -File "C:\Program Files\windows_exporter\{{ item }}.ps1"'
  loop: '{{ os_wmi_exporter_collector_scripts }}'

- name: Create a scheduled task to node info collector
  win_scheduled_task:
    name: '{{ item }}'
    actions:
    - path: 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe'
      arguments: '-ExecutionPolicy ByPass -File "C:\Program Files\windows_exporter\{{ item }}.ps1"'
    state: present
    enabled: yes
    user: SYSTEM
    triggers:
    - type: daily
      start_boundary: '2017-10-09T0{{ 5|random(start=1) }}:00:00'
  loop: '{{ os_wmi_exporter_collector_scripts }}'

- include_tasks: '{{ ansible_system }}/register.yml'
  when: consul_public_register | bool
