---
- name: Copies the key from the user who is running ansible to the remote machine
  authorized_key:
    user: '{{ ansible_user }}'
    key: '{{ os_linux_id_rsa }}'
  when: os_linux_id_rsa is defined

- name: Ensure BASH log
  lineinfile:
    dest: '/etc/profile'
    state: 'present'
    line: '{{ item }}'
  loop:
    - 'HISTSIZE={{ os_linux_shell_history }}'
    - 'TMOUT={{ os_linux_shell_timeout }}'
    - PROMPT_COMMAND='history -a >(tee -a ~/.bash_history | logger -t "$USER ${SSH_CLIENT%% *} $PWD")'

- name: Disable Vim tracking
  lineinfile:
    dest: '/etc/vimrc'
    state: 'present'
    regexp: '^set viminfo='
    line: 'set viminfo=""'

- name: Ensure sysstat file exists
  stat: 
    path: '/etc/cron.d/sysstat'
  register: sysstat_file

- name: Disable sysstat collect
  file:
    path: '/etc/cron.d/sysstat'
    state: 'absent'
  when:
    - os_linux_disable_sysstat_collect | bool
    - sysstat_file.stat.exists

- name: Disable MTA IPv6 protocol
  lineinfile:
    state: 'present'
    dest: '/etc/postfix/main.cf'
    regexp: '^inet_protocols ='
    line: 'inet_protocols = ipv4'
  when: os_disable_ipv6 | bool

- name: Configure MTA
  lineinfile:
    state: 'present'
    dest: '/etc/postfix/main.cf'
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  loop: { regexp: '^relayhost =', line: 'relayhost = {{ os_linux_MTA_relayhost }}' }
  when: os_linux_MTA_relayhost is defined

- name: Configure terminal scheme
  lineinfile:
    dest: '/etc/bashrc'
    state: 'present'
    line: '{{ item }}'
  loop:
    - 'TMOUT={{ os_linux_shell_timeout }}'
    - "IP=$(/sbin/ifconfig {{ ansible_default_ipv4.alias }}|awk '/inet / {print $2}'|cut -d ':' -f 2)"
    - 'export PS1="[\[\033[01;31m\]\u\[\033[00m\]@\[\033[01;32m\]\h\[\033[00m\] \[\033[01;36m\]\$IP \[\033[01;33m\]\W\[\033[00m\]]\[\033[00;34m\]$\[\033[00m\]"'

- name: Network interfaces parameter script transfer
  copy:
    src: 'ifup-local'
    dest: '/sbin/ifup-local'
    owner: 'root'
    group: 'root'
    mode: '0755'
  when: os_linux_disable_tcp_offloading | bool

- name: Set its SELinux context
  shell: chcon --reference /sbin/ifup /sbin/ifup-local
  when: os_linux_disable_tcp_offloading | bool

- name: "Ensure default user umask is {{ os_linux_default_umask }} or more restrictive"
  block:
    - name: Set default user umask is {{ os_linux_default_umask }} - /etc/bashrc"
      replace:
        path: '/etc/bashrc'
        regexp: '(^\s+umask) 002'
        replace: '\1 {{ os_linux_default_umask }}'
    - name: Set default user umask is {{ os_linux_default_umask }} - /etc/profile"
      replace:
        path: '/etc/profile'
        regexp: '(^\s+umask) 002'
        replace: '\1 {{ os_linux_default_umask }}'
  when: os_linux_default_umask != '002'

- name: Ensure network file exists
  stat:
    path: '/etc/sysconfig/network'
  register: network_file

- name: Set the network resolver single-request option
  lineinfile:
    dest: '/etc/sysconfig/network'
    state: 'present'
    line: 'RES_OPTIONS="timeout:2 rotate single-request single-request-reopen"'
  when: 
    - network_file.stat.exists
    - os_linux_resolver_single_request | bool
