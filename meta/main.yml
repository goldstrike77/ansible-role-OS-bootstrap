galaxy_info:
  author: your name
  description: your description
  company: your company (optional)

  # If the issue tracker for your role is not on github, uncomment the
  # next line and provide a value
  # issue_tracker_url: http://example.com/issue/tracker

  # Some suggested licenses:
  # - BSD (default)
  # - MIT
  # - GPLv2
  # - GPLv3
  # - Apache
  # - CC-BY
  license: license (GPLv2, CC-BY, etc)

  min_ansible_version: 2.8

  # If this a Container Enabled role, provide the minimum Ansible Container version.
  # min_ansible_container_version:

  # Optionally specify the branch Galaxy will use when accessing the GitHub
  # repo for this role. During role install, if no tags are available,
  # Galaxy will use this branch. During import Galaxy will access files on
  # this branch. If Travis integration is configured, only notifications for this
  # branch will be accepted. Otherwise, in all cases, the repo's default branch
  # (usually master) will be used.
  #github_branch:

  #
  # platforms is a list of platforms, and each platform has a name and a list of versions.
  #
  # platforms:
  # - name: Fedora
  #   versions:
  #   - all
  #   - 25
  # - name: SomePlatform
  #   versions:
  #   - all
  #   - 1.0
  #   - 7
  #   - 99.99

  galaxy_tags: []
    # List tags for your role here, one per line. A tag is a keyword that describes
    # and categorizes the role. Users find roles by searching for tags. Be sure to
    # remove the '[]' above, if you add tags to this list.
    #
    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
    #       Maximum 20 tags per role.

dependencies:
  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
  # if you add dependencies to this list.
  - role: 'ansible-role-OS-beats'
    vars:
      beats_type: 'audit'
      beats_version: '{{ os_auditbeat_version }}'
      beats_port_arg: '{{ os_auditbeat_port_arg }}'
      beats_output_type: '{{ os_auditbeat_output.type }}'
      beats_output_auth: '{{ os_auditbeat_output.auth | bool }}'
      beats_output_https: '{{ os_auditbeat_output.https | bool }}'
      beats_output_host: '{{ os_auditbeat_output.elasti_host }}'
      beats_output_port: '{{ os_auditbeat_output.elasti_port }}'
      beats_kibana_host: '{{ os_auditbeat_output.kibana_host }}'
      beats_kibana_port: '{{ os_auditbeat_output.kibana_port }}'
      beats_output_user: '{{ os_auditbeat_output.user }}'
      beats_output_pass: '{{ os_auditbeat_output.pass }}'
      auditbeat_audit_rules: '{{ os_linux_audit_rules }}'
    when:
      - os_harden | bool
      - os_audit | bool
      - os_audit_type == 'auditbeat'
  - role: 'ansible-role-OS-beats'
    vars:
      beats_type: 'packet'
      beats_version: '{{ os_packetbeat_version }}'
      beats_port_arg: '{{ os_packetbeat_port_arg }}'
      beats_output_type: '{{ os_packetbeat_output.type }}'
      beats_output_auth: '{{ os_packetbeat_output.auth | bool }}'
      beats_output_https: '{{ os_packetbeat_output.https | bool }}'
      beats_output_host: '{{ os_packetbeat_output.elasti_host }}'
      beats_output_port: '{{ os_packetbeat_output.elasti_port }}'
      beats_kibana_host: '{{ os_packetbeat_output.kibana_host }}'
      beats_kibana_port: '{{ os_packetbeat_output.kibana_port }}'
      beats_output_user: '{{ os_packetbeat_output.user }}'
      beats_output_pass: '{{ os_packetbeat_output.pass }}'
    when: os_trafficsniff | bool
